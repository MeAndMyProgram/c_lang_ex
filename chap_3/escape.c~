#include <stdio.h>
#define MAX 32

void escape (int s[], int t[]);
void reescape (int d[], int g[]);
void make_arr(int m[]);
void pring(int n[]);


main()
{
	int s[MAX], t[MAX];
	int m[MAX];
	make_arr(s);
	escape(s, t);
	pring(t);
	reescape(t, m);
	pring(m);
	
	return 0;

  }

void escape (int s[], int t[])
{
	int i, j;

	j = 0;
	for (i = 0; s[i] != '\0'; ++i) {
	  switch (s[i]) {
	    case '\t':
	      t[j] = '\\';
	      ++j;
	      t[j] = 't';
	      ++j;
	      break;
	    case '\n':
	      t[j] = '\\';
	      ++j;
	      t[j] = 'n';
	      ++j;
	      break;
	    default:
	      t[j] =s[i];
	      ++j;
	      break;
}}
}

void reescape(int s[], int t[])
  {
	int i, j;
	j = 0;
	for (i = 0; s[i] != '\0'; ++i) {
	  switch (s[i]) {
	    case '\\':
	      ++i;
	      switch (s[i]) {
		case 't':
		  t[j] = '\t';
		  ++j;
		  break;
		case 'n':
		  t[j] = '\n';
		  ++j;
		  break;
		  }
	      break;
	    default:
	      t[j] = s[i];
	      ++j;
	      break;
	      }
}
  }

void make_arr(int s[])
  {
    int c;
    int i =0;
    while ((c = getchar()) != '\n') {
      s[i] = c;
	++i;
}
      s[i] ='\n';
      ++i;
      s[i] = '\0';
}




    
void pring(int s[])
{
    int i;
    for (i = 0; i != '\0'; ++i) 
      printf("%d", s[i]);
    printf("\n");
    }
		  
    

